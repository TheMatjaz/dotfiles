# -----------------------------------------------------------------------------
# Matjaž's dotfiles ZSH aliases configuration file
#
# Copyright (c) 2015-2016, Matjaž Guštin <dev@matjaz.it> matjaz.it
# This source code form is part of the "Matjaž's dotfiles" project and is 
# subject to the terms of the BSD 3-clause license as expressed in the 
# LICENSE.md file found in the top-level directory of this distribution and at
# http://directory.fsf.org/wiki/License:BSD_3Clause
# -----------------------------------------------------------------------------

# Directories
alias dev="cd ~/Development"    
alias tmp="cd /tmp"
alias dot="cd ~/Development/Dotfiles"


# Create and enter the directory
function mkcd() {
    mkdir -p $@ && cd $_
}


# Get size of a directory or file
function size() {
    du -shck "$@" | sort -rn | awk '
        function human(x) {
            s="kMGTEPYZ";
            while (x>=1000 && length(s)>1) {
                x/=1024
                s=substr(s,2)
            }
            return int(x+0.5) substr(s,1,1)
        }
        {gsub(/^[0-9]+/, human($1)); print}'
    }


# Pretty print json
alias json='python -m json.tool'


# Start Emacsclient and eventually also the daemon server, if down
alias e="emacsclient -t -a ''"


# Alias for correct pip, sqlite and gpg versions
alias pip="pip3"
alias sqlite="sqlite3"
alias gpg=“gpg2”
alias py="python3"


# IP addresses
alias wanip="dig +short myip.opendns.com @resolver1.opendns.com"
alias lanip="ipconfig getifaddr en0"
alias ipwan="wanip"
alias iplan="lanip"


# Extra many types of compressed packages
# Credit: http://nparikh.org/notes/zshrc.txt
extract() {
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2)  tar -jxvf "$1"                        ;;
            *.tar.gz)   tar -zxvf "$1"                        ;;
            *.bz2)      bunzip2 "$1"                          ;;
            *.dmg)      hdiutil mount "$1"                    ;;
            *.gz)       gunzip "$1"                           ;;
            *.tar)      tar -xvf "$1"                         ;;
            *.tbz2)     tar -jxvf "$1"                        ;;
            *.tgz)      tar -zxvf "$1"                        ;;
            *.zip)      unzip "$1"                            ;;
            *.ZIP)      unzip "$1"                            ;;
            *.pax)      cat "$1" | pax -r                     ;;
            *.pax.Z)    uncompress "$1" --stdout | pax -r     ;;
            *.Z)        uncompress "$1"                       ;;
            *) echo "'$1' cannot be extracted/mounted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file to extract"
    fi
}


# Apply zshrc, zsh_aliases and zsh_path changes
alias zshrc="source ~/.zshrc"


# Midnight Commander wrapper to make it exit in its current directory
alias mc=". /usr/share/mc/bin/mc-wrapper.sh"


# Call pdftk, if installed, to compress a PDF file passing through postscript
function pdfcompress() {
    which pdf2ps 2>&1 > /dev/null
    if [ $? = 0 ]; then
        filename=$1
        filename=${filename%.*}
        echo -n "pdf -> ps"
        pdf2ps "$filename.pdf" "/tmp/$filename.ps"
        echo -n " -> pdf compressed"
        ps2pdf /tmp/$filename.ps $filename\ compressed.pdf
        echo "   Done!"
        rm "/tmp/$filename.ps"
    else
        echo "PdfTK not installed. Cannot use pdf2ps and ps2pdf."
    fi
}


# Wget download until completed (for slow/unstable connections)
alias wget-infinite="wget --tries=0 --retry-connrefused --continue --timeout=30 --random-wait --background --append-output=/tmp/wget_background"
alias wget-infinite-status="tail -2 /tmp/wget_background | head -1"


# Add a list of files to gitignore if not already there
function gitignore() {
    if [ -d ".git" ]; then
        # Create file if not exists or update modification time
        touch .gitignore
        if [[ $# == 0 ]]; then
            cat .gitignore
        else 
            while [[ $# > 0 ]]; do
                # If the file is not already in .gitignore, then append it
                grep -q "$1" ".gitignore" || echo "$1" >> ".gitignore"
                # Go to next command line parameter
                shift
            done
        fi
    else
        echo "This is not a git repository. Nothing done."
    fi
}


# Awesome terminal commands fot weather forecast
# Parameter one ($1) = the city to lookup
function weather() {
    if [ -z $1 ] ; then
        echo "Usage: weather <name-of-the-city>"
    else
        { curl -s http://wttr.in/$1 ; finger $1@graph.no } | less
    fi
}

# Thanks to: http://zanshin.net/2012/08/01/my-zsh-setup-for-python-virtualenv/
# Activates a Python virtual enviroment and dectivates its automatic prompt
# Once activated, run `deactivate` to put it off.
function activate() {
    if [ -z $1 ] ; then
        echo "Usage: activate <name of the virtual enviroment>"
    else
        source ./$1/bin/activate
    fi
}

# Update pip and all its packages
function pipupdate() {
    which pip3 2>&1 > /dev/null
    if [ $? = 0 ]; then  # if pip exists
        echo "$prompt Updating pip3 itself. May ask for root password."
        sudo -H pip3 install --upgrade pip
        if [[ -z $(pip3 freeze --local) ]]; then
            echo "$prompt No pip packages installed so far."
        else
            echo "$prompt Updating all pip3 packages."
            pip3 freeze --local \
                | grep -v '^\-e' \
                | cut -d = -f 1  \
                | xargs -n1 sudo -H pip3 install --upgrade
        fi
    else
        echo "$prompt Missing pip3, skipping."
    fi
}
